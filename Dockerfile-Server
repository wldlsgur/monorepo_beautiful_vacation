FROM node:alpine as build

WORKDIR /app

COPY package.json ./
COPY yarn.lock ./
COPY packages/common-types/package.json ./packages/common-types/
COPY packages/server/package.json ./packages/server/

RUN apk add --no-cache curl bash
RUN corepack enable
RUN corepack prepare yarn@4.4.0 --activate
RUN yarn install

COPY ./ ./

RUN yarn server:build

FROM node:alpine as production

WORKDIR /app

COPY package.json ./
COPY yarn.lock ./
COPY packages/common-types/package.json ./packages/common-types/
COPY packages/server/package.json ./packages/server/

ARG DB_HOST
ARG DB_PORT
ARG DB_USER
ARG DB_PASSWORD
ARG DB_NAME
ARG REDIS_HOST
ARG REDIS_PORT
ARG COOKIE_SECRET
ARG JWT_SECRET
ARG KAKAO_REST_API_KEY
ARG KAKAO_REDIRECT_URL
ARG BCRYPT_SALT_ROUNDS

RUN apk add --no-cache curl bash
RUN corepack enable
RUN corepack prepare yarn@4.4.0 --activate
RUN yarn install

COPY --from=build /app/packages/server/dist ./packages/server/dist

ENV DB_HOST=$DB_HOST \
    DB_PORT=$DB_PORT \
    DB_USER=$DB_USER \
    DB_PASSWORD=$DB_PASSWORD \
    DB_NAME=$DB_NAME \
    REDIS_HOST=$REDIS_HOST \
    REDIS_PORT=$REDIS_PORT \
    COOKIE_SECRET=$COOKIE_SECRET \
    JWT_SECRET=$JWT_SECRET \
    KAKAO_REST_API_KEY=$KAKAO_REST_API_KEY \
    KAKAO_REDIRECT_URL=$KAKAO_REDIRECT_URL \
    BCRYPT_SALT_ROUNDS=$BCRYPT_SALT_ROUNDS

RUN npm install -g pm2

EXPOSE 5000
ENTRYPOINT ["yarn"]
CMD ["server:start"]
